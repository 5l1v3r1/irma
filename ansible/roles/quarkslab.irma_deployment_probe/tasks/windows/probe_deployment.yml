---

- name: Ensure that releases directory has been created
  win_file:
    path: "{{ probe_deployment_dir }}"
    state: directory
  when: irma_deployment_code_version != 'local'

- name: Check if probe src archive is already present
  local_action: stat path="{{ playbook_dir }}/files/probe.zip"
  register: probe_src_archive
  ignore_errors: True

- name: Gather probe src from current directory
  local_action: shell cd "{{ playbook_dir }}/../../probe" && git archive -o "{{ playbook_dir }}/files/probe.zip" "{{ irma_deployment_code_version }}"
  when: irma_deployment_code_version != 'local' and not probe_src_archive.stat.exists

- name: Upload probe src archive
  win_copy:
    src: files/probe.zip
    dest: "{{ probe_deployment_dir }}"
  when: irma_deployment_code_version != 'local'

- name: Get windows style path
  set_fact:
    probe_dest_dir: '{{ probe_deployment_dir | regex_replace("/", "\\") }}'
  when: irma_deployment_code_version != 'local'

- name: Unzip probe src archive
  win_unzip:
    src: "{{ probe_dest_dir }}\\probe.zip"
    dest: "{{ probe_dest_dir }}"
  when: irma_deployment_code_version != 'local'

- name: Check if common src archive is already present
  local_action: stat path="{{ playbook_dir }}/files/common.zip"
  register: common_src_archive
  ignore_errors: True

- name: Gather common src from current directory
  local_action: shell cd "{{ playbook_dir }}/../../common" && git archive -o "{{ playbook_dir }}/files/common.zip" "{{ irma_deployment_code_version }}"
  when: irma_deployment_code_version != 'local' and not common_src_archive.stat.exists

- name: Remove common symlink
  win_file:
    path: "{{ probe_deployment_dir }}\\lib"
    state: absent
  when: irma_deployment_code_version != 'local'

- name: Upload common src archive
  win_copy:
    src: files/common.zip
    dest: "{{ probe_deployment_dir }}"
  when: irma_deployment_code_version != 'local'

- name: Unzip common src archive
  win_unzip:
    src: "{{ probe_dest_dir }}\\common.zip"
    dest: "{{ probe_dest_dir }}\\lib"
  when: irma_deployment_code_version != 'local'

- name: Install requirements in a virtualenv
  raw: "{{ item.cmd }}"
  register: result
  failed_when: result.rc not in {{ item.rc | default([0]) }}
  with_items:
    - cmd: python -m virtualenv --system-site-packages "{{ probe_deployment_dir }}/venv"
    - cmd: "{{ probe_deployment_dir }}/venv/Scripts/python.exe -m pip install -r {{ probe_deployment_dir }}/requirements.txt"

- name: Configure config/probe.ini file
  win_ini_file:
    dest: "{{ probe_deployment_dir }}/config/probe.ini"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: probe_deployment_configs

- name: Create symlink release -> current
  raw: cmd /C '"{{ item.cmd }}"'
  register: result
  failed_when: result.rc not in {{ item.rc | default([0]) }}
  with_items:
    - cmd: rmdir /q /s "{{ probe_install_dir }}"
      rc: [0, 1, 2]
    - cmd: mklink /d "{{ probe_install_dir }}" "{{ probe_deployment_dir }}"
      rc: [0, 2]
  when: irma_deployment_code_version != 'local'

- include: winsrv.yml
  when: "{{ irma_winsrv | default(false) }} == true"

- include: startup.yml
  when: "{{ irma_winsrv | default(false) }} == false"
