---

- name: Ensure that releases directory has been created
  file:
    path: "{{ probe_deployment_dir }}"
    state: directory
  when: irma_deployment_code_version != 'local'

- name: Check if probe src archive is present
  local_action: stat path="{{ playbook_dir }}/files/{{ irma_probe_archive }}"
  when: irma_deployment_code_version != 'local'

- name: Check if common src archive is already present
  local_action: stat path="{{ playbook_dir }}/files/{{ irma_common_archive }}"
  when: irma_deployment_code_version != 'local'

- name: Upload probe src archive
  unarchive:
    src: "files/{{ irma_probe_archive }}"
    dest: "{{ probe_deployment_dir }}"
  when: irma_deployment_code_version != 'local'

- name: Remove common symlink
  file:
    path: "{{ probe_deployment_dir }}/lib"
    state: absent
  when: irma_deployment_code_version != 'local'

- name: Create lib directory
  file:
    path: "{{ probe_deployment_dir }}/lib"
    state: directory
  when: irma_deployment_code_version != 'local'

- name: Deploy probe-common src archive
  unarchive:
    src: "files/{{ irma_common_archive }}"
    dest: "{{ probe_deployment_dir }}/lib"
  when: irma_deployment_code_version != 'local'

- name: Install requirements in a virtualenv
  pip:
    requirements: "{{ probe_deployment_dir }}/requirements.txt"
    virtualenv: "{{ probe_deployment_dir }}/venv"
    virtualenv_site_packages: "yes"
    extra_args: "{{ pip_extra_args | default('') }}"

- name: Configure config/probe.ini file
  ini_file:
    dest: "{{ probe_deployment_dir }}/config/probe.ini"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ probe_deployment_configs }}"

- name: Create symlink release -> current
  file:
    src: "{{ probe_deployment_dir }}"
    dest: "{{ probe_install_dir }}"
    state: link

- name: Restart Supervisor services
  supervisorctl:
    name: "{{ item.name }}"
    state: restarted
  become: yes
  with_items: "{{ supervisor_programs_probe }}"
