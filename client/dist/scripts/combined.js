"use strict";angular.module("irma",["ngResource","ngSanitize","ngRoute","angularFileUpload"]).constant("constants",{useMocks:!0,fakeDelay:500,baseApi:"/api"}).config(["$routeProvider",function(t){t.when("/selection",{templateUrl:"views/selection.html",controller:"SelectionCtrl",location:"selection"}).when("/upload",{templateUrl:"views/upload.html",controller:"UploadCtrl",location:"upload"}).when("/scan",{templateUrl:"views/scan.html",controller:"ScanCtrl",location:"scan"}).when("/results",{templateUrl:"views/results.html",controller:"ResultsCtrl",location:"results"}).otherwise({redirectTo:"/selection"})}]),function(){var t=["$scope","$location","alerts","state","config","ScanModel"],e=function(e,n,i,r,s,o){for(var a=0;a<t.length;a++)this[t[a]]=arguments[a];this.init(),this.state.currentScan=new o,e.scan=this.state.currentScan,e.trigger=this.trigger.bind(this)};e.prototype.init=function(){this.$scope.settings={display:!1,force:!0,probes:[]},this.config.getProbes().then(function(t){0===t.probe_list.length&&(t.probe_list=["Probe1","Probe2","Probe3"]);for(var e=0;e<t.probe_list.length;e++)this.$scope.settings.probes.push({name:t.probe_list[e],active:!0})}.bind(this),function(){this.alerts.add({type:"danger",standard:"probesListError",dismiss:!1})}.bind(this))},e.prototype.trigger=function(){this.$scope.scan.uploadFiles().then(function(){this.alerts.add({type:"info",standard:"uploadStarted",dismiss:2e3}),this.$location.path("/upload")}.bind(this),function(t){this.alerts.add({type:"danger",standard:t,dismiss:!1})}.bind(this))},e.$inject=t,angular.module("irma").controller("SelectionCtrl",e)}(),function(){var t=["$scope","$location","alerts","state","config","ScanModel"],e=function(e,n,i,r){for(var s=0;s<t.length;s++)this[t[s]]=arguments[s];r.currentScan||n.path("/")};e.$inject=t,angular.module("irma").controller("UploadCtrl",e)}(),function(){var t=["alerts"],e=function(t){return{restrict:"E",template:'<div class="alerts"><ul class="list-unstyled"><li class="alert-{{alert.type}}" ng-repeat="alert in alerts" ng-click="dismiss(alert)" ng-bind-html="alert.message"></li></ul></div>',link:function(e){e.alerts=t.list(),e.dismiss=function(e){t.remove(e)}}}};e.$inject=t,angular.module("irma").directive("alerts",e)}(),function(){var t=[],e=function(){return{link:function(t,e){e.click(function(){angular.element("#file-container").click()})}}};e.$inject=t,angular.module("irma").directive("fileTrigger",e)}(),function(){var t=[],e=function(){return{restrict:"A",scope:{state:"=booleanDisplay",color:"@color"},template:"<span class=\"glyphicon glyphicon-{{(state)? 'ok': 'remove'}}\"style=\"color: {{(color)? color: (state)? '#5cb85c': '#d9534f'}}\"></span>"}};e.$inject=t,angular.module("irma").directive("booleanDisplay",e)}(),function(){var t=["$fileUploader","$q","scanStore"],e=function(e,n,i){for(var r=0;r<t.length;r++)this[t[r]]=arguments[r];var s=function(){this.id=void 0,this.store=i,this.uploader=e.create()};return s.prototype.uploadFiles=function(){var t=n.defer();return this.uploader.getNotUploadedItems().length?this.store.getNewId().then(function(e){this.id=e.scan_id,t.resolve(e.scan_id)}.bind(this),function(){t.reject("scanIdRetrievalError")}.bind(this)):t.reject("noFilesToUpload"),t.promise},s};e.$inject=t,angular.module("irma").factory("ScanModel",e)}(),function(){var t=["bridge"],e=function(e){for(var n=0;n<t.length;n++)this[t[n]]=arguments[n];this.getNewId=function(){return e.get({url:"/scan/new"})}};e.$inject=t,angular.module("irma").service("scanStore",e)}(),function(){var t=["$http","$q"],e=function(e,n){for(var i=0;i<t.length;i++)this[t[i]]=arguments[i];this.rootUrl="http://frontend.irma.qb/_api",this.get=function(t){var i=n.defer();return e.get(this.rootUrl+t.url,{params:t.payload}).then(function(t){i.resolve(t.data)},function(t){i.reject(t.data)}),i.promise},this.post=function(t){var i=n.defer();return e.post(this.rootUrl+t.url,t.payload).then(function(t){i.resolve(t.data)},function(t){i.reject(t.data)}),i.promise}};e.$inject=t,angular.module("irma").service("bridge",e)}(),function(){var t=["$rootScope","$route"],e=function(e){for(var n=0;n<t.length;n++)this[t[n]]=arguments[n];this.location=void 0,this.scan=void 0,e.state=this,e.$on("$routeChangeSuccess",function(t,e){this.location=e.location}.bind(this))};e.$inject=t,angular.module("irma").service("state",e)}(),function(){var t=["$timeout"],e=function(e){for(var n=0;n<t.length;n++)this[t[n]]=arguments[n];this.messages=[],this.map={noFilesToUpload:"<strong>Error:</strong> There are no files queued for upload",scanIdRetrievalError:"<strong>Error:</strong> An error occured while requesting a new scan id",probesListError:"<strong>Error:</strong> Unable to load probes list",uploadStarted:"<strong>Info:</strong> Upload has started..."},this.autoDismiss=function(t){(void 0===t.dismiss||t.dismiss!==!1)&&(t.dismiss=t.dismiss!==parseInt(t.dismiss)?4e3:parseInt(t.dismiss),e(function(){this.remove(t)}.bind(this),t.dismiss))},this.add=function(t){-1===["info","warning","success","danger"].indexOf(t.type)&&(t.type="info"),"debug"!==t.status&&(t.standard&&this.map[t.standard]&&(t.message=this.map[t.standard]),this.messages.push(t),this.autoDismiss(t))},this.remove=function(t){var e=this.messages.indexOf(t);-1!==e&&this.messages.splice(e,1)},this.list=function(){return this.messages}};e.$inject=t,angular.module("irma").service("alerts",e)}(),function(){var t=["bridge"],e=function(e){for(var n=0;n<t.length;n++)this[t[n]]=arguments[n];this.getProbes=function(){return e.get({url:"/probe/list"})}};e.$inject=t,angular.module("irma").service("config",e)}();